    private Long id;

    private String name;

    public String venue;

    public Type type;


    private String month;

    private Date date;

    /**
     * K = Player Id
     * V = Player Id List of Scores for an Event
     */
    private Map<Long, List<Score>> playerScoresMap;
    
    private Long competitionId;

drop table golfapp.golf_course;
drop table golfapp.GOLF_EVENT;
drop table golfapp.COMPETITION;
drop table golfapp.PLAYER;
drop table golfapp.GOLF_LEADER_BOARD;
drop table golfapp.score;

create table golfapp.golf_course(
    id int auto_increment,
    name varchar(40) not null,
    address varchar(50) null, 
    primary key(id)
);

create table golfapp.COMPETITION(
    id bigint auto_increment,
    name varchar(40) not null, 
    competition_type varchar(20) null, 
    primary key(id)
);

create table golfapp.GOLF_LEADER_BOARD(
    id bigint auto_increment,
    competition_id bigint ,
    player_id int,
    avg_score_per_round int,
    best_five_total_round int,
    bonus_rounds int,
    total_points int,
    total_score int,
    primary key(id),
    foreign key(competition_id)
        references golfapp.COMPETITION(id)
);

CREATE TABLE golfapp.golf_event (
  id BIGINT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  competition_id bigint,
  venue VARCHAR(255) DEFAULT NULL,
  type VARCHAR(255) DEFAULT NULL,
  date date, 
  PRIMARY KEY (id),
  foreign key(competition_id)
  references golfapp.COMPETITION(id)
);

CREATE TABLE golfapp.player (
  id BIGINT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  userName VARCHAR(255) DEFAULT NULL,
  handicap INT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE golfapp.event_player (
  event_id BIGINT NOT NULL,
  player_id BIGINT NOT NULL,
  PRIMARY KEY (event_id, player_id),
  CONSTRAINT fk_event_player_event FOREIGN KEY (event_id) REFERENCES event (id),
  CONSTRAINT fk_event_player_player FOREIGN KEY (player_id) REFERENCES player (id)
);


create table golfapp.HOLE(
    id int auto_increment,
    course_id int,
    name varchar(20),
    hole_number int,
    par int,
    stroke int,
    white int,
    yellow int,
    red    int,
    primary key(id),
    foreign key(course_id)
          references golfapp.GOLF_COURSE(id)
);

create table golfapp.SCORE(
    id int auto_increment,
    competition_id bigint ,
    player_id int,
    event_id int,
    par int,
    score int,
    points int,
    hole_id int,
    stroke int,
    primary key(id),
    CONSTRAINT fk_competition FOREIGN KEY (competition_id) REFERENCES golfapp.COMPETITION(id)
);

create table golfapp.EVENT_LEADER_BOARD(
    id int auto_increment,
    event_id int,
    player_id int,
    hole int,
    totalScore int,
    totalPoints int,
    holesPlayed int,
    handicap int,
    foreign key(event_id)
          references event(id)
);

INSERT INTO player (name, username, handicap) VALUES
  ('Darragh Flynn', 'dflynn', 28),
  ('Paul Ronane', 'pronane', 21);
  
INSERT INTO golf_event (competition_id, name, venue, type, date)
VALUES (2, 'Chesunt', 'Chesunt', NULL, '2023-03-11'),
       (2, 'luton hoo', 'luton hoo', NULL, '2023-04-01');
       
INSERT INTO event_player (event_id, player_id) VALUES (1, 1);
INSERT INTO event_player (event_id, player_id) VALUES (1, 2);       
       
INSERT INTO score (competition_id, player_id, event_id, par, score, points, hole_id)
VALUES 
(NULL, 1, 1, NULL, 9, 0, 50),
(NULL, 1, 1, NULL, 5, 2, 51),
(NULL, 2, 1, NULL, 5, 3, 50),
(NULL, 2, 1, NULL, 5, 2, 51);

